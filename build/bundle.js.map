{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/AppBar.svelte","../../src/Desktop.svelte","../../src/components/Window.svelte","../../src/components/FlyingArrow.svelte","../../src/components/CloseableWindow.svelte","../../src/windows/BreakingNews.svelte","../../src/windows/ChatBubble.svelte","../../src/windows/BoardPopup.svelte","../../src/windows/Patita.svelte","../../src/windows/Mandarina.svelte","../../src/windows/KiwiBsod.svelte","../../src/windows/Farm.svelte","../../src/constants.js","../../src/windows/RandomMessages.svelte","../../src/components/Countdown.svelte","../../src/components/Progress.svelte","../../src/components/FlyingText.svelte","../../src/components/FlyingTexts.svelte","../../src/windows/StreamStarting.svelte","../../src/components/DesktopIcon.svelte","../../src/StartingSoonCountdown.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  function computeTime() {\n    let date = new Date();\n    return date.toLocaleString(\"es-ES\");\n  }\n\n  let timer = computeTime();\n  let interval;\n\n  $: {\n    clearInterval(interval);\n    interval = setInterval(() => {\n      timer = computeTime();\n    }, 1000);\n  }\n</script>\n\n<svg width=\"100%\" height=\"30\" x=\"0\" y=\"0\">\n  <rect width=\"100%\" height=\"100%\" fill=\"black\" />\n  <text\n    font-weight=\"bold\"\n    x=\"10\"\n    y=\"15\"\n    fill=\"white\"\n    dominant-baseline=\"central\"\n    text-anchor=\"left\"\n  >\n    twitch.tv/danirod_\n  </text>\n  <text\n    class=\"clock\"\n    font-weight=\"bold\"\n    x=\"50%\"\n    y=\"15\"\n    fill=\"white\"\n    dominant-baseline=\"central\"\n    text-anchor=\"middle\"\n  >\n    {timer}\n  </text>\n  <g class=\"symbolics\">\n    <g class=\"symbolicsInner\" transform=\"translate(-75,0)\">\n      <image\n        href=\"adwaita/network-wireless-symbolic.svg\"\n        fill=\"white\"\n        x=\"0\"\n        width=\"15\"\n        height=\"15\"\n      />\n      <image\n        href=\"adwaita/audio-volume-high-symbolic.svg\"\n        fill=\"white\"\n        x=\"25\"\n        width=\"15\"\n        height=\"15\"\n      />\n      <image\n        href=\"adwaita/system-shutdown-symbolic.svg\"\n        fill=\"white\"\n        x=\"50\"\n        width=\"15\"\n        height=\"15\"\n      />\n    </g>\n  </g>\n</svg>\n\n<style>\n  .symbolics {\n    transform: translate(100%, 7.5px);\n    filter: brightness(100);\n  }\n  .clock {\n    font-variant-numeric: tabular-nums;\n  }\n</style>\n","<script>\n  import AppBar from \"./AppBar.svelte\";\n\n  export let width, height;\n  export let background;\n</script>\n\n<svg class=\"desktop\" x=\"0\" y=\"0\" {width} {height}>\n  <!-- Just so that it preloads the font -->\n  <text font-family=\"Bad Script\" x=\"-200%\" y=\"-200%\" font-size=\"1\">Bad Script</text>\n  <rect fill={background} x=\"0\" y=\"0\" height=\"100%\" width=\"100%\" />\n  <slot />\n  <AppBar />\n</svg>\n\n<style>\n</style>\n","<script>\n  export let hide, x, y, width, height;\n  export let title;\n  let ready = false;\n\n  let uniqueID = Date.now() + \"\" + Math.random();\n</script>\n\n<svg\n  on:animationend={() => (ready = true)}\n  class={`window ${hide ? \" hide\" : \"\"}`}\n  {width}\n  {height}\n  {x}\n  {y}\n>\n  <mask id={`${uniqueID}_mask`}>\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"black\" />\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" ry=\"8\" fill=\"white\" />\n  </mask>\n  <g mask={`url(#${uniqueID}_mask)`}>\n    <rect height=\"100%\" width=\"100%\" fill=\"white\" />\n    <svg class=\"mainHost\" width=\"100%\" height=\"100%\" x=\"0\" y=\"0\">\n      {#if ready}\n        <slot />\n      {/if}\n    </svg>\n    <g class=\"titleBar\">\n      <rect class=\"titleBarBackground\" x=\"0\" y=\"0\" width=\"100%\" height=\"40\" />\n      <text x=\"50%\" y=\"20\" class=\"titleText\">{title}</text>\n      <g class=\"closeButtonContainer\">\n        <image\n          width=\"20\"\n          height=\"20\"\n          x=\"-30\"\n          y=\"10\"\n          href=\"adwaita/cross-symbolic.svg\"\n        />\n      </g>\n      <line\n        x1=\"0\"\n        y1=\"40\"\n        x2=\"100%\"\n        y2=\"40\"\n        stroke=\"#00000030\"\n        stroke-width=\"0.5\"\n      />\n    </g>\n  </g>\n</svg>\n\n<style>\n  @keyframes enter {\n    from {\n      opacity: 0.2;\n      transform: translateX(25%) translateY(25%) scale(0.5);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateX(0) translateY(0) scale(1);\n    }\n  }\n\n  @keyframes hide {\n    from {\n      opacity: 1;\n      transform: translateX(0) translateY(0) scale(1);\n    }\n    to {\n      opacity: 0;\n      transform: translateX(25%) translateY(25%) scale(0.5);\n    }\n  }\n\n  .titleText {\n    dominant-baseline: central;\n    text-anchor: middle;\n    fill: var(--title-bar-foreground);\n    font-weight: bold;\n  }\n\n  .window {\n    width: var(--window-width);\n    height: var(--window-height);\n    filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.7));\n    -moz-filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.7));\n    -webkit-filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.7));\n\n    animation: enter 0.25s ease-out;\n  }\n\n  .hide {\n    animation: hide 0.25s ease-in;\n    animation-fill-mode: forwards;\n  }\n\n  .closeButtonContainer {\n    transform: translateX(100%);\n  }\n\n  .titleBarBackground {\n    fill: var(--title-bar-background);\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  export let x, y;\n  export let from, to;\n\n  let className = \"animate2\";\n\n  const NEXT_KEYFRAME = {\n    animation1: \"animate2\",\n    animation2: \"animate3\",\n    animation3: \"animate4\",\n    animation4: \"animate5\",\n    animation5: \"animate6\",\n  };\n\n  const dispatch = createEventDispatcher();\n\n  const animate = (e) => {\n    const animationTokens = e.animationName.split(\"-\");\n    const animationname = animationTokens[animationTokens.length - 1];\n    const next = NEXT_KEYFRAME[animationname];\n    className = next;\n    dispatch(\"animationstep\", animationname);\n  };\n</script>\n\n<svg class=\"svg\" {x} {y} width=\"48\" height=\"48\">\n  <image\n    style={`--fly-from: ${from}; --fly-to: ${to}`}\n    on:animationend={animate}\n    class={className}\n    href=\"adwaita/left_ptr.png\"\n    x=\"0\"\n    y=\"0\"\n    width=\"48\"\n    height=\"48\"\n  />\n</svg>\n\n<style>\n  svg {\n    overflow: visible;\n  }\n  @keyframes animation1 {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n  @keyframes animation2 {\n    from {\n      transform: var(--fly-from);\n      opacity: 0;\n    }\n    to {\n      transform: translateX(0) translateY(0);\n      opacity: 1;\n    }\n  }\n  @keyframes animation3 {\n    from {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(0.8);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n  @keyframes animation4 {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  @keyframes animation5 {\n    from {\n      transform: translateX(0) translateY(0);\n      opacity: 1;\n    }\n    to {\n      transform: var(--fly-to);\n      opacity: 0;\n    }\n  }\n\n  .animate1 {\n    animation-name: animation1;\n    animation-duration: 2s;\n    animation-iteration-count: 1;\n    opacity: 0;\n  }\n  .animate2 {\n    animation-name: animation2;\n    animation-duration: 2s;\n    animation-iteration-count: 1;\n  }\n  .animate3 {\n    animation-name: animation3;\n    animation-duration: 0.25s;\n    animation-iteration-count: 1;\n  }\n  .animate4 {\n    animation-name: animation4;\n    animation-duration: 1.5s;\n    animation-iteration-count: 1;\n    opacity: 1;\n  }\n  .animate5 {\n    animation-name: animation5;\n    animation-duration: 2s;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n    opacity: 0;\n  }\n  .animate6 {\n    opacity: 0;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import Window from \"../components/Window.svelte\";\n  import FlyingArrow from \"../components/FlyingArrow.svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let duration = 8000;\n  export let title, x, y, width, height;\n\n  let showArrow = false;\n  let hide = false;\n\n  const hideWindow = (name) => {\n    if (name.detail === \"animation3\") {\n      hide = true;\n    } else if (name.detail === \"animation5\") {\n      dispatch(\"done\");\n    }\n  };\n\n  let interval;\n  $: {\n    clearInterval(interval);\n    interval = setTimeout(() => (showArrow = true), parseInt(duration));\n  }\n</script>\n\n<g>\n  <Window {hide} {x} {y} {width} {height} {title}>\n    <slot />\n  </Window>\n  {#if showArrow}\n    <FlyingArrow\n      from=\"translateX(500%) translateY(100%)\"\n      to=\"translateX(-100%) translateY(400%)\"\n      on:animationstep={hideWindow}\n      x=\"820\"\n      y=\"260\"\n    />\n  {/if}\n</g>\n","<script>\n  import CloseableWindow from \"../components/CloseableWindow.svelte\";\n  export let author;\n</script>\n\n<CloseableWindow\n  on:done\n  x=\"50\"\n  y=\"250\"\n  width=\"800\"\n  height=\"240\"\n  title=\"Últimas noticias\"\n>\n  <g class=\"icon\">\n    <rect x=\"30\" y=\"80\" width=\"100\" height=\"100\" fill=\"#ff7800\" rx=\"5\" ry=\"5\" />\n    <image\n      href=\"adwaita/application-rss+xml-symbolic.svg\"\n      x=\"40\"\n      y=\"90\"\n      width=\"80\"\n      height=\"80\"\n    />\n  </g>\n  <text\n    x=\"150\"\n    y=\"100\"\n    font-weight=\"bold\"\n    font-size=\"1.2em\"\n    dominant-baseline=\"middle\"\n    text-anchor=\"left\">Las noticias del día:</text\n  >\n  <foreignObject fill=\"black\" x=\"150\" y=\"125\" width=\"600\" height=\"100\">\n    <div\n      style=\"color: black; font-size: 1.1em;\"\n      xmlns=\"http://www.w3.org/1999/xhtml\"\n    >\n      <slot />\n      <p style=\"font-weight: 300;\">Informa: {author}</p>\n    </div>\n  </foreignObject>\n</CloseableWindow>\n","<script>\n  import CloseableWindow from \"../components/CloseableWindow.svelte\";\n  export let author;\n</script>\n\n<CloseableWindow\n  on:done\n  x=\"50\"\n  y=\"250\"\n  width=\"800\"\n  height=\"240\"\n  title=\"Mensaje recibido\"\n>\n  <g class=\"icon\">\n    <rect x=\"30\" y=\"80\" width=\"100\" height=\"100\" fill=\"#26a269\" rx=\"5\" ry=\"5\" />\n    <image\n      href=\"adwaita/chat-symbolic.svg\"\n      x=\"40\"\n      y=\"90\"\n      width=\"80\"\n      height=\"80\"\n    />\n  </g>\n  <text\n    x=\"150\"\n    y=\"100\"\n    font-weight=\"bold\"\n    font-size=\"1.2em\"\n    dominant-baseline=\"middle\"\n    text-anchor=\"left\">{author} dice:</text\n  >\n  <foreignObject fill=\"black\" x=\"150\" y=\"125\" width=\"600\" height=\"100\">\n    <div\n      style=\"color: black; font-size: 1.2em\"\n      xmlns=\"http://www.w3.org/1999/xhtml\"\n    >\n      <slot />\n    </div>\n  </foreignObject>\n</CloseableWindow>\n","<script>\n  import CloseableWindow from \"../components/CloseableWindow.svelte\";\n</script>\n\n<CloseableWindow\n  on:done\n  x=\"50\"\n  y=\"250\"\n  width=\"800\"\n  height=\"160\"\n  title=\"¿Necesitas una tarjeta?\"\n>\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#903030\" />\n  <g class=\"flying\">\n    <image x=\"75%\" y=\"50%\" href=\"motherboards/sample1.jpg\" />\n    <image x=\"33%\" y=\"15%\" href=\"motherboards/sample2.jpg\" />\n    <image x=\"65%\" y=\"22%\" href=\"motherboards/sample3.jpg\" />\n    <image x=\"15%\" y=\"76%\" href=\"motherboards/sample4.jpg\" />\n    <image x=\"44%\" y=\"50%\" href=\"motherboards/sample5.jpg\" />\n    <image x=\"12%\" y=\"23%\" href=\"motherboards/sample6.jpg\" />\n    <image x=\"27%\" y=\"93%\" href=\"motherboards/sample7.jpg\" />\n    <image x=\"51%\" y=\"15%\" href=\"motherboards/sample8.jpg\" />\n  </g>\n  <g class=\"text\">\n    <text\n      x=\"50%\"\n      y=\"60%\"\n      fill=\"white\"\n      font-size=\"2.5rem\"\n      font-weight=\"900\"\n      text-anchor=\"middle\">TARJETAS MADRE CERCA DE USTED</text\n    >\n    <text\n      x=\"50%\"\n      y=\"80%\"\n      fill=\"white\"\n      font-size=\"1.5rem\"\n      font-weight=\"900\"\n      text-anchor=\"middle\">Haga clic aquí para saber más</text\n    >\n  </g>\n  <text\n    x=\"10\"\n    y=\"95%\"\n    fill=\"white\"\n    font-size=\"0.8rem\"\n    font-weight=\"normal\"\n    text-anchor=\"left\"\n    alignment-baseline=\"bottom\">Un mensaje del sponsor @ckmu32</text\n  >\n</CloseableWindow>\n\n<style>\n  @keyframes dancingtext {\n    0% {\n      transform: translate(0, 0);\n    }\n    25% {\n      transform: translate(2px, 0);\n    }\n    50% {\n      transform: translate(0, 2px);\n    }\n    75% {\n      transform: translate(-2px, 0);\n    }\n    100% {\n      transform: translate(0, 0);\n    }\n  }\n  @keyframes image {\n    0% {\n      transform: translate(0, 0) scale(1);\n    }\n    33% {\n      transform: translate(-20px, 0) scale(0.8);\n    }\n    66% {\n      transform: translate(30px, 0) scale(1.5);\n    }\n    99% {\n      transform: translate(0, 0) scale(1);\n    }\n  }\n  .flying {\n    overflow: hidden;\n    opacity: 0.5;\n  }\n  .flying image {\n    height: 50%;\n    animation: image 1s infinite;\n  }\n  .flying image:nth-child(1) {\n    animation-delay: 0.25s;\n  }\n  .flying image:nth-child(2) {\n    animation-delay: 0.5s;\n  }\n  .flying image:nth-child(3) {\n    animation-delay: 0.75s;\n  }\n  .flying image:nth-child(4) {\n    animation-delay: 1s;\n  }\n  .flying image:nth-child(5) {\n    animation-delay: 1.25s;\n  }\n  .flying image:nth-child(6) {\n    animation-delay: 1.5s;\n  }\n  .flying image:nth-child(7) {\n    animation-delay: 1.75s;\n  }\n  .flying image:nth-child(8) {\n    animation-delay: 2s;\n  }\n  .text {\n    animation: dancingtext 0.25s infinite;\n    text-shadow: 0 0 2px black;\n  }\n</style>\n","<script>\n  import CloseableWindow from \"../components/CloseableWindow.svelte\";\n</script>\n\n<CloseableWindow\n  on:done\n  x=\"50\"\n  y=\"250\"\n  width=\"800\"\n  height=\"160\"\n  title=\"Merceria Patita\"\n>\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#c080c0\" />\n  <g class=\"button\">\n<g class=\"rotate\">\n<circle x=\"50%\" y=\"50%\" r=\"30\" class=\"bg\" />\n<circle x=\"50%\" y=\"50%\" r=\"4\" transform=\"translate(-8, -8)\" class=\"dot\" />\n<circle x=\"50%\" y=\"50%\" r=\"4\" transform=\"translate(-8, +8)\" class=\"dot\" />\n<circle x=\"50%\" y=\"50%\" r=\"4\" transform=\"translate(+8, -8)\" class=\"dot\" />\n<circle x=\"50%\" y=\"50%\" r=\"4\" transform=\"translate(+8, +8)\" class=\"dot\" />\n</g>\n  </g>\n<text x=\"50%\" y=\"50%\" class=\"merceria\" fill=\"white\" font-weight=\"800\" text-anchor=\"middle\" dominant-baseline=\"central\" font-size=\"40\">MERCERIA PATITA</text>\n<text x=\"50%\" fill=\"white\" font-weight=\"800\" text-anchor=\"middle\" dominant-baseline=\"central\" y=\"80%\" font-size=\"25\" class=\"botones\">Botones al 50% de descuento</text>\n\n<g class=\"move\">\n<text fill=\"white\" font-weight=\"800\" class=\"pato\" font-size=\"50\" dominant-baseline=\"bottom\" y=\"100%\" x=\"100%\" text-anchor=\"left\">🦆</text>\n</g>\n  <text\n    x=\"10\"\n    y=\"95%\"\n    fill=\"white\"\n    font-size=\"0.8rem\"\n    font-weight=\"normal\"\n    text-anchor=\"left\"\n    alignment-baseline=\"bottom\">Un mensaje del sponsor @ikanian</text\n  >\n</CloseableWindow>\n\n<style>\n@keyframes boton_da_vueltas {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(180deg); }\n}\n\n@keyframes boton_se_mueve {\nfrom { transform: translate(110%, 60%); }\nto { transform: translate(-10%, 60%); }\n}\n\n@keyframes merceria_flotante {\nfrom { transform: translateX(100%); }\nto { transform: translateX(0%)}\n}\n\n@keyframes patito {\nfrom { transform: translateX(0%); }\nto { transform: translateX(-100%)}\n}\n\n@keyframes patito_walk {\n from { transform: translateY(0); }\n80% { transform: translateY(-5px); }\nto { transform: translateY(0); }\n}\n\n@keyframes botones_text {\nfrom { opacity: 0; }\nto { opacity: 1; }\n}\n\n.pato {\n  animation: patito 15s linear;\n  animation-delay: 4s;\n}\n\n.move {\nanimation: patito_walk 0.5s linear infinite;\n}\n\n.merceria {\nanimation: merceria_flotante 1.5s ease-out;\nanimation-delay: 1s;\n    animation-fill-mode: backwards;\n}\n\n.botones {\nanimation: botones_text 0.5s ease-out;\nanimation-delay: 4s;\n    animation-fill-mode: backwards;\n}\n\n.button {\n  animation: boton_se_mueve 3s linear;\n}\n\n.rotate {\n  animation: boton_da_vueltas 1s linear infinite;\n}\n\n.button .bg {\n  fill: #a9f4a9;\n  stroke: #5bad64;\n  stroke-width: 5;\n}\n.button .dog {\n  fill: black;\n}\n</style>\n","<script>\n  import CloseableWindow from \"../components/CloseableWindow.svelte\";\n</script>\n\n<CloseableWindow\n  on:done\n  x=\"50\"\n  y=\"250\"\n  width=\"800\"\n  height=\"160\"\n  title=\"MANDARINA\"\n>\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#903030\" />\n  <g class=\"mandarina\">\n    <image x=\"0%\" width=\"100%\" class=\"pan\" href=\"images/commons_mandarina.jpg\" />\n  </g>\n  <g class=\"text\">\n    <text\n      x=\"50%\"\n      y=\"70%\"\n      fill=\"white\"\n      font-size=\"2.5rem\"\n      font-weight=\"900\"\n      font-family=\"Bad Script\"\n      text-anchor=\"middle\">MANDARINA</text\n    >\n  </g>\n  <text\n    x=\"300\"\n    y=\"95%\"\n    fill=\"white\"\n    font-size=\"0.8rem\"\n    font-weight=\"normal\"\n    text-anchor=\"left\"\n    alignment-baseline=\"bottom\">Un mensaje del sponsor @dannywolfmx2</text\n  >\n</CloseableWindow>\n\n<style>\n  @keyframes dancingtext {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.25);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n  @keyframes pan {\n    from {\n      transform: translate(0, 0) scale(1);\n    }\n    to {\n      transform: translate(0, -75%) scale(1);\n    }\n  }\n  .pan {\n    animation: pan 10s linear;\n  }\n  .text {\n    animation: dancingtext 0.5s infinite;\n    transform-origin: center;\n    text-shadow: 0 0 2px black;\n  }\n</style>\n","<script>\n  let hide = false;\n\n  $: {\n    setTimeout(() => hide = true, 5000);\n  }\n</script>\n\n<svg class:hide={hide}>\n<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"black\"></rect>\n<g class=\"scroll\">\n<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"darkblue\"></rect>\n  <rect fill=\"white\" y=\"180\" height=\"40\" x=\"41%\" width=\"18%\"></rect>\n<text x=\"50%\" y=\"200\" font-family=\"monospace\" font-size=\"24\" dominant-baseline=\"central\" text-anchor=\"middle\" fill=\"darkblue\">kiwi32.exe</text>\n<text x=\"50%\" font-family=\"monospace\" font-size=\"24\" dominant-baseline=\"central\" text-anchor=\"middle\" y=\"300\" fill=\"white\">Se ha detectado un virus en su PC (kiwi32.exe)</text>\n<text x=\"50%\" font-family=\"monospace\" font-size=\"24\" dominant-baseline=\"central\" text-anchor=\"middle\" fill=\"white\" y=\"350\">¿Desea consumir el kiwi para solucionar el problema?</text><text x=\"50%\" font-family=\"monospace\" font-size=\"24\" dominant-baseline=\"central\" text-anchor=\"middle\" fill=\"white\" y=\"400\">Presione Alt+F4 para consumir el kiwi</text>\n<text x=\"50%\" font-family=\"monospace\" font-size=\"24\" dominant-baseline=\"central\" text-anchor=\"middle\" fill=\"white\" y=\"350\">¿Desea consumir el kiwi para solucionar el problema?</text><text x=\"50%\" font-family=\"monospace\" font-size=\"24\" dominant-baseline=\"central\" text-anchor=\"middle\" fill=\"white\" y=\"450\">Presione Ctrl+Alt+Supr para reportar a @ckmu32</text>\n</g>\n</svg>\n\n<style>\n.hide { display: none; }\n\n@keyframes drop {\n  from { transform: translateY(-100%); }\n  to { transform: translateY(0); }\n}\n\n.scroll {\n  animation: drop 0.1s linear; \n}\n</style>\n","<script>\n  import CloseableWindow from \"../components/CloseableWindow.svelte\";\n  \n  export let title, line1, line2;\n</script>\n\n<CloseableWindow\n  on:done\n  x=\"400\"\n  y=\"250\"\n  width=\"450\"\n  height=\"250\"\n  duration={15000}\n  {title}\n  >\n  <image x=\"0%\" width=\"100%\" class=\"bg\" href=\"images/farmer.jpg\" />\n  <foreignObject fill=\"black\" x=\"20\" y=\"50\" width=\"250\" height=\"300\">\n    <div\n      style=\"color: white; font-weight: bold; text-shadow: 0 0 4px black; background: rgba(0, 0, 0, 0.5); font-size: 1.1em;\"\n      xmlns=\"http://www.w3.org/1999/xhtml\"\n    >\n      <p>{line1}</p>\n      <p>{line2}</p>\n    </div>\n  </foreignObject>\n</CloseableWindow>","export const STATUSES = [\n  // @danirod_º\n  \"Montando el disco duro de los memes...\",\n  \"Sacando brillo a los teclados...\",\n  \"Desfragmentando un kiwi...\",\n  \"Actualizando el entorno gráfico...\",\n  \"Acariciando patos...\",\n\n  // @dannywolfx2\n  \"BAD SECTOR -- @dannywolfmx2\",\n  \"Sacando a pasear al lobete... -- @dannywolfmx2\",\n  \"Recargándole las pilas a Pinchito... -- @dannywolfmx2\",\n  \n  // @ikanian\n  \"Almacenando patos de emergencia... -- @ikanian\",\n\n  // @ckmu32\n  \"Preparando el nuevo año de Java en YouTube... -- @ckmu32\",\n\n  // @messer199\n  \"Preparando el curso de Scala... es coña, antes sale HL3 -- @messer199\",\n\n  // @frostqui\n  \"Reparando el condensador de fluzo... -- @frostqui\",\n  \"Liberando a clank del mundo de las tinieblas... -- @frostqui\",\n  \"Preparando la música de m****a sin copyright... -- @frostqui\",\n  \"Buscando frameworks raros para enseñarlos en directo... -- @frostqui\",\n  \"Yendo al río a llenar garrafas para las recompensas del canal... -- @frostqui\",\n\n  // jemmaengz1202\n  \"Canjeando subs por kiwis y sandías... -- @jemmaengz1202\",\n\n  // @ivan_the_raging_python\n  \"Huyendo de LatAm... -- @ivan_the_raging_python\",\n  \n  // @mauriballes\n  \"Compilando el kernel Linux... otra vez -- @mauriballes\",\n];\n\nexport const POPUPS = [\n  {\n    text: \"Expertos en ciberseguridad recomiendan usar Emacs y Nano hasta nuevo aviso por vulnerabilidad encontrada en Vim\",\n    author: \"@messer199\",\n    kind: \"BreakingNews\",\n    id: \"use-emacs\",\n  },\n  {\n    text: \"lerna.js ha muerto\",\n    author: \"@frostqui\",\n    kind: \"BreakingNews\",\n    id: \"lerna-ded\",\n  },\n  {\n    text: \"Escribe eeeeeeeeeeeeeeeee en el chat cuando leas este mensaje\",\n    author: \"@frostqui\",\n    kind: \"ChatBubble\",\n    id: \"eeeeeeeeeee\",\n  },\n  {\n    text: \"El tiempo es como el dinero, mientras menos se tiene más se valora\",\n    author: \"@dannywolfmx2\",\n    kind: \"ChatBubble\",\n    id: \"tiempotiempo\",\n  },\n  {\n    text: \"11\",\n    author: \"@dannywolfmx2\",\n    kind: \"ChatBubble\",\n    id: \"once\",\n  },\n  {\n    text: \"Buenas gracias y muchas tardes. Espero esteis estupendos y estupendas, y si no, no pasa nada, es mejor eso que morirse.\",\n    author: \"@MrTioTizo\",\n    kind: \"ChatBubble\",\n    id: \"buenasgracias\",\n  },\n  {\n    text: \"Atención: Todo aquel que no canjee la recompensa de fichar será fulminado\",\n    author: \"@frostqui\",\n    kind: \"ChatBubble\",\n    id: \"ficharplz\",\n  },\n  {\n    // Custom designed, doesn't need additional parameters\n    kind: \"BoardPopup\",\n    id: \"motherboards\",\n  },\n  {\n    // Custom designed, doesn't need additional parameters\n    kind: \"PatitaPopup\",\n    id: \"patita\",\n  },\n  {\n    // Custom designed, doesn't need additional parameters\n    kind: \"KiwiBsod\",\n    id: \"kiwibsod\",\n  },\n  {\n    // Custom designed, doesn't need additional parameters\n    kind: \"Mandarina\",\n    id: \"mandarina\",\n  },\n  {\n    kind: \"Farm\",\n    title: \"Sandía\",\n    id: \"sandia\",\n    line1:\n      \"Este es dannywolfmx2. dannywolfmx2 madruga cada día para que puedas encontrar las sandías más frescas de todo el mercado\",\n    line2: \"Compra calidad. Compra sandías dannywolfmx2\",\n  },\n  {\n    kind: \"Farm\",\n    title: \"Pollo\",\n    id: \"pollo\",\n    line1:\n      \"Este es ckmu32. ckmu32 madruga cada día para que puedas encontrar los pollos mejor alimentados de todo el mercado\",\n    line2: \"Compra calidad. Compra pollos ckmu32\",\n  },\n];\n\nexport const SECONDS_BETWEEN_POPUPS = 45;\n\nexport const COUNTDOWN_MINUTES = 8;\n","<script>\n  import BreakingNews from \"./BreakingNews.svelte\";\n  import ChatBubble from \"./ChatBubble.svelte\";\n  import BoardPopup from \"./BoardPopup.svelte\";\n  import Patita from \"./Patita.svelte\";\n  import Mandarina from \"./Mandarina.svelte\";\n  import KiwiBsod from \"./KiwiBsod.svelte\";\n  import Farm from \"./Farm.svelte\";\n  import { POPUPS, SECONDS_BETWEEN_POPUPS } from \"../constants\";\n\n  let popups = [...POPUPS];\n\n  let current = null;\n\n  const trigger = () => {\n    if (POPUPS.length === 0) {\n      return;\n    }\n    const pick = popups[Math.floor(Math.random() * popups.length)];\n    current = pick;\n    popups = popups.filter((n) => n.id !== pick.id);\n  };\n\n  const next = () => {\n    current = null;\n    setTimeout(trigger, SECONDS_BETWEEN_POPUPS * 1000); // reduce this as more messages are added\n  };\n\n  next();\n</script>\n\n<g>\n  {#if current != null}\n    {#if current.kind === \"Mandarina\"}\n      <Mandarina on:done={next} />\n    {:else if current.kind === \"BreakingNews\"}\n      <BreakingNews on:done={next} author={current.author}\n        >{current.text}</BreakingNews\n      >\n    {:else if current.kind === \"Farm\"}\n      <Farm on:done={next} {...current} />\n    {:else if current.kind === \"KiwiBsod\"}\n      <KiwiBsod on:done={next} />\n    {:else if current.kind === \"ChatBubble\"}\n      <ChatBubble on:done={next} author={current.author}\n        >{current.text}</ChatBubble\n      >\n    {:else if current.kind === \"BoardPopup\"}\n      <BoardPopup on:done={next} />\n    {:else if current.kind === \"PatitaPopup\"}\n      <Patita on:done={next} />\n    {/if}\n  {/if}\n</g>\n","<script>\n  export let duration, x, y;\n  let endsAt = Date.now() + duration * 1000;\n\n  function durationToTime(seconds) {\n    if (seconds < 0) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? `0${secs}` : secs}`;\n  }\n\n  let remaining = (endsAt - Date.now()) / 1000;\n  let value = durationToTime(remaining);\n  let interval;\n\n  $: {\n    clearInterval(interval);\n    interval = setInterval(() => {\n      remaining = Math.round((endsAt - Date.now()) / 1000);\n      value = durationToTime(remaining);\n    }, 1000);\n  }\n</script>\n\n<text\n  {x}\n  {y}\n  class=\"countdown\"\n  dominant-baseline=\"central\"\n  text-anchor=\"middle\"\n  font-weight=\"300\"\n  font-size=\"3em\">{value}</text\n>\n\n<style>\n  .countdown {\n    font-variant-numeric: tabular-nums;\n  }\n</style>\n","<script>\n  export let duration;\n  export let x, y, width, height;\n</script>\n\n<svg\n  class=\"progress\"\n  on:animationend\n  style={`--transition-duration: ${duration}s`}\n  {width}\n  {height}\n  {x}\n  {y}\n>\n  <mask id=\"progressMask\">\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"black\" />\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" rx=\"5\" ry=\"5\" />\n  </mask>\n  <g mask=\"url(#progressMask)\" width=\"100%\" height=\"100%\">\n    <rect fill=\"#e0e0e0\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n    <rect\n      fill=\"#3584e4\"\n      class=\"foreground\"\n      x=\"0\"\n      y=\"0\"\n      width=\"100%\"\n      height=\"100%\"\n    />\n  </g>\n</svg>\n\n<style>\n  @keyframes progress {\n    0% {\n      width: 0%;\n    }\n    100% {\n      width: 100%;\n    }\n  }\n  .foreground {\n    animation-name: progress;\n    animation-play-state: running;\n    animation-duration: var(--transition-duration);\n    animation-iteration-count: 1;\n    animation-timing-function: linear;\n  }\n</style>\n","<script>\n  export let state = \"normal\";\n</script>\n\n<text\n  on:animationend\n  class={state}\n  x=\"50%\"\n  y=\"50%\"\n  font-size=\"0.8em\"\n  dominant-baseline=\"central\"\n  text-anchor=\"middle\"\n>\n  <slot />\n</text>\n\n<style scoped>\n  @keyframes enter {\n    from {\n      opacity: 0;\n      transform: translateX(100%);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n  @keyframes gone {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n    }\n    to {\n      opacity: 0;\n      transform: translateX(-100%);\n    }\n  }\n  @keyframes flash {\n    from {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.6;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  .enter {\n    animation-name: enter;\n    animation-duration: 0.75s;\n    animation-timing-function: ease-out;\n    animation-iteration-count: 1;\n  }\n  .normal {\n    animation-name: flash;\n    animation-duration: 2s;\n    animation-timing-function: ease-in-out;\n    animation-iteration-count: 5;\n  }\n  .gone {\n    animation-name: gone;\n    animation-duration: 0.75s;\n    animation-timing-function: ease-in;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n  }\n</style>\n","<script>\n  import { STATUSES } from \"../constants\";\n  import FlyingText from \"./FlyingText.svelte\";\n\n  const NEXTS = {\n    enter: \"normal\",\n    normal: \"gone\",\n    gone: \"enter\",\n  };\n\n  let currentMessage = \"\";\n  let state = \"gone\";\n\n  const pickSentence = () => {\n    const random = Math.floor(Math.random() * STATUSES.length);\n    currentMessage = STATUSES[random];\n    state = \"enter\";\n  };\n\n  const iterate = () => {\n    const next = NEXTS[state];\n    state = next;\n\n    if (state == \"gone\") {\n      setTimeout(pickSentence, 1000);\n    }\n  };\n\n  $: {\n    setTimeout(() => pickSentence(), 5000);\n  }\n</script>\n\n<FlyingText {state} on:animationend={iterate}>{currentMessage}</FlyingText>\n","<script>\n  import Countdown from \"../components/Countdown.svelte\";\n  import Window from \"../components/Window.svelte\";\n  import Progress from \"../components/Progress.svelte\";\n  import FlyingTexts from \"../components/FlyingTexts.svelte\";\n  import { COUNTDOWN_MINUTES } from \"../constants\";\n\n  let duration = COUNTDOWN_MINUTES * 60;\n\n  let countdownDone = false;\n</script>\n\n<Window\n  x=\"20%\"\n  y=\"60\"\n  width=\"60%\"\n  height=\"240\"\n  title=\"El stream está iniciando\"\n>\n  {#if countdownDone}\n    <text\n      x=\"50%\"\n      y=\"45%\"\n      class=\"countdown\"\n      dominant-baseline=\"central\"\n      text-anchor=\"middle\"\n      font-weight=\"300\"\n      fill=\"black\"\n      font-size=\"2em\">Empezamos ya</text\n    >\n  {:else}\n    <Countdown {duration} x=\"50%\" y=\"35%\" />\n    <text\n      x=\"50%\"\n      y=\"55%\"\n      dominant-baseline=\"central\"\n      text-anchor=\"middle\"\n      font-weight=\"bold\"\n      font-size=\"1.2em\"\n    >\n      Desplegando stream...\n    </text>\n  {/if}\n  <Progress\n    x=\"25%\"\n    y=\"65%\"\n    width=\"50%\"\n    height=\"10\"\n    r=\"10\"\n    {duration}\n    on:animationend={() => (countdownDone = true)}\n  />\n\n  <svg width=\"100%\" height=\"1em\" x=\"0\" y=\"85%\">\n    <FlyingTexts />\n  </svg>\n</Window>\n\n<style>\n</style>\n","<script>\n  export let icon, text;\n  export let x, y;\n</script>\n\n<svg {x} {y} width=\"150\" height=\"100\">\n  <image href={icon} x=\"56\" y=\"6\" width=\"48\" height=\"48\" />\n  <text x=\"50%\" y=\"80\" text-anchor=\"middle\" fill=\"white\" font-size=\"0.9em\"\n    >{text}</text\n  >\n</svg>\n","<script>\n  import Desktop from \"./Desktop.svelte\";\n  import RandomMessages from \"./windows/RandomMessages.svelte\";\n  import StreamStarting from \"./windows/StreamStarting.svelte\";\n  import DesktopIcon from \"./components/DesktopIcon.svelte\";\n  import FlyingArrow from \"./components/FlyingArrow.svelte\";\n\n  let ready = false;\n  let showArrow = false;\n\n  const mouseAnimation = (name) => {\n    if (name.detail === \"animation3\") {\n      setTimeout(() => (ready = true), 1000);\n    }\n  };\n\n  $: {\n    setTimeout(() => (showArrow = true), 4000);\n  }\n</script>\n\n<main>\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 960 540\">\n    <Desktop width=\"100%\" height=\"100%\" background=\"#264073\">\n      <DesktopIcon\n        symbolic\n        x=\"10\"\n        y=\"50\"\n        icon=\"icons/youtube.svg\"\n        text=\"/makigas\"\n      />\n      <DesktopIcon\n        symbolic\n        x=\"10\"\n        y=\"150\"\n        icon=\"icons/discord.svg\"\n        text=\"/Mq7TBAB\"\n      />\n      <DesktopIcon\n        symbolic\n        x=\"10\"\n        y=\"250\"\n        icon=\"icons/twitter.svg\"\n        text=\"@makigas\"\n      />\n      <DesktopIcon\n        x=\"450\"\n        y=\"150\"\n        icon=\"adwaita/hourglass-symbolic.svg\"\n        text=\"Iniciar stream\"\n      />\n      {#if ready}\n        <StreamStarting />\n        <RandomMessages />\n      {/if}\n      {#if showArrow}\n        <FlyingArrow\n          from=\"translateX(200%) translateY(1000%)\"\n          to=\"translateX(-300%) translateY(-400%)\"\n          on:animationstep={mouseAnimation}\n          x=\"530\"\n          y=\"180\"\n        />\n      {/if}\n    </Desktop>\n  </svg>\n</main>\n\n<style>\n  @keyframes show {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  main {\n    opacity: 0;\n    width: 100vw;\n    height: 100vh;\n    animation: show 0.25s ease-out;\n    animation-delay: 1.5s;\n    animation-fill-mode: forwards;\n  }\n</style>\n","import App from \"./StartingSoonCountdown.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: {\n    name: \"world\",\n  },\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","svg_element","name","document","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","removeProperty","setProperty","toggle_class","element","toggle","classList","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","call","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","svg","rect","text0","text1","g1","g0","image0","image1","image2","computeTime","Date","toLocaleString","interval","timer","clearInterval","$$invalidate","setInterval","text_1","width","height","background","create_if_block","svg1","mask","rect0","rect1","g2","rect2","svg0","rect3","image","line","hide","x","y","title","uniqueID","now","random","image_style_value","to","className","NEXT_KEYFRAME","animation1","animation2","animation3","animation4","animation5","dispatch","animationTokens","animationName","split","animationname","g","duration","showArrow","setTimeout","parseInt","foreignObject","div","author","image3","image4","image5","image6","image7","text2","circle0","circle1","circle2","circle3","circle4","text3","text4","text5","p0","p1","line1","line2","STATUSES","POPUPS","kind","id","chatbubble_changes","levels","updates","to_null_out","accounted_for","n","spread_props","breakingnews_changes","t_value","t","if_block","popups","current","trigger","pick","floor","next","SECONDS_BETWEEN_POPUPS","durationToTime","seconds","secs","endsAt","remaining","round","state","NEXTS","enter","normal","gone","currentMessage","pickSentence","countdownDone","COUNTDOWN_MINUTES","icon","create_if_block_1","createElement","main","body"],"mappings":"gCAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAoChF,SAASE,EAAYC,EAAYC,EAAKC,EAASf,GAC3C,GAAIa,EAAY,CACZ,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAASf,GAC5D,OAAOa,EAAW,GAAGG,IAG7B,SAASC,EAAiBJ,EAAYC,EAAKC,EAASf,GAChD,OAAOa,EAAW,IAAMb,EAClBL,EAAOoB,EAAQD,IAAII,QAASL,EAAW,GAAGb,EAAGc,KAC7CC,EAAQD,IAElB,SAASK,EAAiBN,EAAYE,EAASK,EAAOpB,GAClD,GAAIa,EAAW,IAAMb,EAAI,CACrB,MAAMqB,EAAOR,EAAW,GAAGb,EAAGoB,IAC9B,QAAsBE,IAAlBP,EAAQK,MACR,OAAOC,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAME,EAAS,GACTC,EAAMC,KAAKC,IAAIX,EAAQK,MAAMO,OAAQN,EAAKM,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC1BL,EAAOK,GAAKb,EAAQK,MAAMQ,GAAKP,EAAKO,GAExC,OAAOL,EAEX,OAAOR,EAAQK,MAAQC,EAE3B,OAAON,EAAQK,MAEnB,SAASS,EAAiBC,EAAMC,EAAiBjB,EAAKC,EAASiB,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAejB,EAAiBc,EAAiBjB,EAAKC,EAASkB,GACrEH,EAAKK,EAAED,EAAcF,IAO7B,SAASI,EAAyBrB,GAC9B,GAAIA,EAAQD,IAAIa,OAAS,GAAI,CACzB,MAAMP,EAAQ,GACRO,EAASZ,EAAQD,IAAIa,OAAS,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBR,EAAMQ,IAAM,EAEhB,OAAOR,EAEX,OAAQ,EAiCZ,SAASiB,EAAcC,GACnB,OAAgB,MAATA,EAAgB,GAAKA,EAgKhC,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GA0BhC,SAASQ,EAAYC,GACjB,OAAOC,SAASC,gBAAgB,6BAA8BF,GAElE,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOjB,EAAMkB,EAAOC,EAASC,GAElC,OADApB,EAAKqB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMpB,EAAKsB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKvB,EAAMwB,EAAW3B,GACd,MAATA,EACAG,EAAKyB,gBAAgBD,GAChBxB,EAAK0B,aAAaF,KAAe3B,GACtCG,EAAK2B,aAAaH,EAAW3B,GAqLrC,SAAS+B,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKiB,YAAchB,IACnBD,EAAKC,KAAOA,GAapB,SAASiB,EAAU9B,EAAM+B,EAAKlC,EAAOmC,GACnB,OAAVnC,EACAG,EAAKiC,MAAMC,eAAeH,GAG1B/B,EAAKiC,MAAME,YAAYJ,EAAKlC,EAAOmC,EAAY,YAAc,IA+ErE,SAASI,EAAaC,EAAS5B,EAAM6B,GACjCD,EAAQE,UAAUD,EAAS,MAAQ,UAAU7B,GAqNjD,IAAI+B,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAmBxB,SAASC,IACL,MAAMD,EAlBV,WACI,IAAKF,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EAeWK,GAClB,MAAO,CAACC,EAAMC,KACV,MAAMC,EAAYN,EAAUO,GAAGD,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAM9B,EA/OlB,SAAsB4B,EAAMC,EAAQG,GAAU,GAC1C,MAAMC,EAAIzC,SAAS0C,YAAY,eAE/B,OADAD,EAAEE,gBAAgBP,EAAMI,GAAS,EAAOH,GACjCI,EA4OeG,CAAaR,EAAMC,GACjCC,EAAUvE,QAAQZ,SAAQN,IACtBA,EAAGgG,KAAKb,EAAWxB,QAoBnC,SAASsC,EAAOd,EAAWxB,GACvB,MAAM8B,EAAYN,EAAUO,GAAGD,UAAU9B,EAAM4B,MAC3CE,GAEAA,EAAUvE,QAAQZ,SAAQN,GAAMA,EAAGgG,KAAKE,KAAMvC,KAItD,MAAMwC,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB3G,GACzBqG,EAAiBO,KAAK5G,GAuB1B,MAAM6G,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBhC,EACxB,EAAG,CAGC,KAAO8B,EAAWZ,EAAiBxE,QAAQ,CACvC,MAAMwD,EAAYgB,EAAiBY,GACnCA,IACA7B,EAAsBC,GACtB+B,EAAO/B,EAAUO,IAKrB,IAHAR,EAAsB,MACtBiB,EAAiBxE,OAAS,EAC1BoF,EAAW,EACJX,EAAkBzE,QACrByE,EAAkBe,KAAlBf,GAIJ,IAAK,IAAIxE,EAAI,EAAGA,EAAIyE,EAAiB1E,OAAQC,GAAK,EAAG,CACjD,MAAMwF,EAAWf,EAAiBzE,GAC7BiF,EAAeQ,IAAID,KAEpBP,EAAeS,IAAIF,GACnBA,KAGRf,EAAiB1E,OAAS,QACrBwE,EAAiBxE,QAC1B,KAAO2E,EAAgB3E,QACnB2E,EAAgBa,KAAhBb,GAEJI,GAAmB,EACnBG,EAAeU,QACfrC,EAAsB+B,GAE1B,SAASC,EAAOxB,GACZ,GAAoB,OAAhBA,EAAG8B,SAAmB,CACtB9B,EAAGwB,SACH9G,EAAQsF,EAAG+B,eACX,MAAMrG,EAAQsE,EAAGtE,MACjBsE,EAAGtE,MAAQ,EAAE,GACbsE,EAAG8B,UAAY9B,EAAG8B,SAASrF,EAAEuD,EAAG5E,IAAKM,GACrCsE,EAAGgC,aAAapH,QAAQqG,IAiBhC,MAAMgB,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACH5F,EAAGyF,GAGX,SAASI,IACAJ,EAAOE,GACR1H,EAAQwH,EAAOG,GAEnBH,EAASA,EAAOzF,EAEpB,SAAS8F,EAAcC,EAAOC,GACtBD,GAASA,EAAMtG,IACf+F,EAASS,OAAOF,GAChBA,EAAMtG,EAAEuG,IAGhB,SAASE,EAAeH,EAAOC,EAAOrF,EAAQsE,GAC1C,GAAIc,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAASN,IAAIa,GACb,OACJP,EAASL,IAAIY,GACbN,EAAOG,EAAEnB,MAAK,KACVe,EAASS,OAAOF,GACZd,IACItE,GACAoF,EAAMK,EAAE,GACZnB,QAGRc,EAAMI,EAAEH,IA8oBhB,SAASK,EAAiBN,GACtBA,GAASA,EAAMH,IAKnB,SAASU,EAAgBtD,EAAW3C,EAAQI,EAAQ8F,GAChD,MAAMlB,SAAEA,EAAQmB,SAAEA,EAAQC,WAAEA,EAAUlB,aAAEA,GAAiBvC,EAAUO,GACnE8B,GAAYA,EAASqB,EAAErG,EAAQI,GAC1B8F,GAED/B,GAAoB,KAChB,MAAMmC,EAAiBH,EAASI,IAAIhJ,GAAKiJ,OAAOzI,GAC5CqI,EACAA,EAAWhC,QAAQkC,GAKnB1I,EAAQ0I,GAEZ3D,EAAUO,GAAGiD,SAAW,MAGhCjB,EAAapH,QAAQqG,GAEzB,SAASsC,EAAkB9D,EAAW+D,GAClC,MAAMxD,EAAKP,EAAUO,GACD,OAAhBA,EAAG8B,WACHpH,EAAQsF,EAAGkD,YACXlD,EAAG8B,UAAY9B,EAAG8B,SAASe,EAAEW,GAG7BxD,EAAGkD,WAAalD,EAAG8B,SAAW,KAC9B9B,EAAG5E,IAAM,IAGjB,SAASqI,EAAWhE,EAAWvD,IACI,IAA3BuD,EAAUO,GAAGtE,MAAM,KACnB+E,EAAiBS,KAAKzB,GAtzBrBuB,IACDA,GAAmB,EACnBH,EAAiB6C,KAAKpC,IAszBtB7B,EAAUO,GAAGtE,MAAMiI,KAAK,IAE5BlE,EAAUO,GAAGtE,MAAOQ,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS0H,EAAKnE,EAAWtB,EAAS0F,EAAUC,EAAiBC,EAAWC,EAAOC,EAAevI,EAAQ,EAAE,IACpG,MAAMwI,EAAmB3E,EACzBC,EAAsBC,GACtB,MAAMO,EAAKP,EAAUO,GAAK,CACtB8B,SAAU,KACV1G,IAAK,KAEL4I,MAAAA,EACAxC,OAAQxH,EACR+J,UAAAA,EACAI,MAAO5J,IAEP0I,SAAU,GACVC,WAAY,GACZkB,cAAe,GACfrC,cAAe,GACfC,aAAc,GACdqC,QAAS,IAAIC,IAAInG,EAAQkG,UAAYH,EAAmBA,EAAiBlE,GAAGqE,QAAU,KAEtFtE,UAAWxF,IACXmB,MAAAA,EACA6I,YAAY,EACZC,KAAMrG,EAAQrB,QAAUoH,EAAiBlE,GAAGwE,MAEhDP,GAAiBA,EAAcjE,EAAGwE,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAzE,EAAG5E,IAAMyI,EACHA,EAASpE,EAAWtB,EAAQ6F,OAAS,IAAI,CAAC9H,EAAGwI,KAAQC,KACnD,MAAM/H,EAAQ+H,EAAK1I,OAAS0I,EAAK,GAAKD,EAOtC,OANI1E,EAAG5E,KAAO2I,EAAU/D,EAAG5E,IAAIc,GAAI8D,EAAG5E,IAAIc,GAAKU,MACtCoD,EAAGuE,YAAcvE,EAAGmE,MAAMjI,IAC3B8D,EAAGmE,MAAMjI,GAAGU,GACZ6H,GACAhB,EAAWhE,EAAWvD,IAEvBwI,KAET,GACN1E,EAAGwB,SACHiD,GAAQ,EACR/J,EAAQsF,EAAG+B,eAEX/B,EAAG8B,WAAWgC,GAAkBA,EAAgB9D,EAAG5E,KAC/C+C,EAAQrB,OAAQ,CAChB,GAAIqB,EAAQyG,QAAS,CAEjB,MAAMC,EA/1ClB,SAAkBzF,GACd,OAAO0F,MAAMC,KAAK3F,EAAQ4F,YA81CJC,CAAS9G,EAAQrB,QAE/BkD,EAAG8B,UAAY9B,EAAG8B,SAASoD,EAAEL,GAC7BA,EAAMjK,QAAQwC,QAId4C,EAAG8B,UAAY9B,EAAG8B,SAASO,IAE3BlE,EAAQgH,OACR5C,EAAc9C,EAAUO,GAAG8B,UAC/BiB,EAAgBtD,EAAWtB,EAAQrB,OAAQqB,EAAQjB,OAAQiB,EAAQ6E,eAEnE1B,IAEJ9B,EAAsB0E,GAkD1B,MAAMkB,EACFC,WACI9B,EAAkB/C,KAAM,GACxBA,KAAK6E,SAAWrL,EAEpBsL,IAAIzF,EAAM6B,GACN,MAAM3B,EAAaS,KAAKR,GAAGD,UAAUF,KAAUW,KAAKR,GAAGD,UAAUF,GAAQ,IAEzE,OADAE,EAAUmB,KAAKQ,GACR,KACH,MAAM6D,EAAQxF,EAAUyF,QAAQ9D,IACjB,IAAX6D,GACAxF,EAAU0F,OAAOF,EAAO,IAGpCG,KAAKC,GA93DT,IAAkBC,EA+3DNpF,KAAKqF,QA/3DCD,EA+3DkBD,EA93DG,IAA5BnL,OAAOsL,KAAKF,GAAK3J,UA+3DhBuE,KAAKR,GAAGuE,YAAa,EACrB/D,KAAKqF,MAAMF,GACXnF,KAAKR,GAAGuE,YAAa,8FCl5D9B,0CAYEnJ,EAAK,g9BArBV6B,EAgDMH,EAAAiJ,EAAA7I,GA/CJL,EAAgDkJ,EAAAC,GAChDnJ,EASOkJ,EAAAE,UACPpJ,EAUOkJ,EAAAG,UACPrJ,EAwBIkJ,EAAAI,GAvBFtJ,EAsBIsJ,EAAAC,GArBFvJ,EAMEuJ,EAAAC,GACFxJ,EAMEuJ,EAAAE,GACFzJ,EAMEuJ,EAAAG,sBAxBHnL,EAAK,qCArCCoL,eACQC,MACHC,eAAe,4BAGzB,IACAC,EADAC,EAAQJ,2CAIVK,cAAcF,GACdG,EAAA,EAAAH,EAAWI,kBACTD,EAAA,EAAAF,EAAQJ,OACP,wMCJ4D,sJACrDpL,EAAU,qKAHxB6B,EAMMH,EAAAiJ,EAAA7I,GAJJL,EAAkFkJ,EAAAiB,UAClFnK,EAAiEkJ,EAAAC,mEAArD5K,EAAU,gSAPX6L,MAAAA,EAAKC,OAAEA,GAAMvB,cACbwB,GAAUxB,wiBCmBZvK,EAAK,IAAAgM,GAAAhM,2IAM8BA,EAAK,4PAbpCA,EAAQ,opBAIJA,EAAQ,uCAVRA,EAAI,GAAG,QAAU,KAAE,4FAFtC6B,EAyCMH,EAAAuK,EAAAnK,GAjCJL,EAGOwK,EAAAC,GAFLzK,EAA4DyK,EAAAC,GAC5D1K,EAA0EyK,EAAAE,GAE5E3K,EA4BIwK,EAAAI,GA3BF5K,EAAgD4K,EAAAC,GAChD7K,EAIM4K,EAAAE,kBACN9K,EAoBI4K,EAAAtB,GAnBFtJ,EAAwEsJ,EAAAyB,GACxE/K,EAAqDsJ,EAAAa,UACrDnK,EAQIsJ,EAAAC,GAPFvJ,EAMEuJ,EAAAyB,GAEJhL,EAOEsJ,EAAA2B,wDAvBG1M,EAAK,qHAM8BA,EAAK,kCAnBhCA,EAAI,GAAG,QAAU,KAAE,2QATzB2M,KAAAA,EAAIC,EAAEA,EAACC,EAAEA,EAAChB,MAAEA,EAAKC,OAAEA,GAAMvB,SACzBuC,GAAKvC,EACZlB,GAAQ,EAER0D,EAAW1B,KAAK2B,MAAQ,GAAKrM,KAAKsM,0OAId,IAAAvB,EAAA,EAAArC,GAAQ,6KCmBRnG,EAAAuJ,EAAA,QAAAS,EAAA,eAAAlN,mBAAmBA,EAAE,sBAEpCA,EAAS,IAAA,8NAJpB6B,EAWMH,EAAAiJ,EAAA7I,GAVJL,EASEkJ,EAAA8B,4BAPiBzM,EAAO,oBADF,GAAAM,GAAA4M,KAAAA,EAAA,eAAAlN,mBAAmBA,EAAE,qCAEpCA,EAAS,IAAA,4HA5BP,IAAA4M,EAAAA,EAACC,EAAEA,GAACtC,GACJZ,KAAAA,EAAIwD,GAAEA,GAAE5C,EAEf6C,EAAY,iBAEVC,EAAa,CACjBC,WAAY,WACZC,WAAY,WACZC,WAAY,WACZC,WAAY,WACZC,WAAY,YAGRC,EAAWrJ,2HAEAQ,IACT,MAAA8I,EAAkB9I,EAAE+I,cAAcC,MAAM,KACxCC,EAAgBH,EAAgBA,EAAgB/M,OAAS,GAE/D6K,EAAA,EAAA0B,EADaC,EAAcU,IAE3BJ,EAAS,gBAAiBI,ghBCaN/N,EAAU,wRAJ3BA,EAAS,IAAAgM,GAAAhM,yDAJhB6B,EAaIH,EAAAsM,EAAAlM,wNATG9B,EAAS,+PA3BR,MAAA2N,EAAWrJ,IAEN,IAAA2J,SAAAA,EAAW,KAAI1D,GACfuC,MAAAA,EAAKF,EAAEA,EAACC,EAAEA,EAAChB,MAAEA,EAAKC,OAAEA,GAAMvB,EAEjC2D,GAAY,EACZvB,GAAO,MAUPpB,yPAEFE,cAAcF,OACdA,EAAW4C,YAAkB,IAAAzC,EAAA,EAAAwC,GAAY,IAAOE,SAASH,sBAXvC7L,IACE,eAAhBA,EAAKsC,OACPgH,EAAA,EAAAiB,GAAO,GACkB,eAAhBvK,EAAKsC,QACdiJ,EAAS,qRCaQ,iMAQY,iBAAU3N,EAAM,smBAxBjD6B,EASIH,EAAAsM,EAAAlM,GARFL,EAA4EuM,EAAApD,GAC5EnJ,EAMEuM,EAAAvB,YAEJ5K,EAOCH,EAAAkK,EAAA9J,mBACDD,EAQgBH,EAAA2M,EAAAvM,GAPdL,EAMM4M,EAAAC,kBADJ7M,EAAkD6M,EAAAjN,8GAAXrB,EAAM,ygBAnCtCuO,GAAMhE,sVC2BKvK,EAAM,QAAC,yqBAhB7B6B,EASIH,EAAAsM,EAAAlM,GARFL,EAA4EuM,EAAApD,GAC5EnJ,EAMEuM,EAAAvB,YAEJ5K,EAOCH,EAAAkK,EAAA9J,0BACDD,EAOgBH,EAAA2M,EAAAvM,GANdL,EAKM4M,EAAAC,8CARctO,EAAM,0kBA3BjBuO,GAAMhE,0aC4BQ,iDAQA,uDAUK,+3CApC9B1I,EAA8DH,EAAAkJ,EAAA9I,YAC9DD,EASIH,EAAAsJ,EAAAlJ,GARFL,EAAyDuJ,EAAAC,GACzDxJ,EAAyDuJ,EAAAE,GACzDzJ,EAAyDuJ,EAAAG,GACzD1J,EAAyDuJ,EAAAwD,GACzD/M,EAAyDuJ,EAAAyD,GACzDhN,EAAyDuJ,EAAA0D,GACzDjN,EAAyDuJ,EAAA2D,GACzDlN,EAAyDuJ,EAAA4D,YAE3D/M,EAiBIH,EAAAqJ,EAAAjJ,GAhBFL,EAOCsJ,EAAAF,UACDpJ,EAOCsJ,EAAAD,mBAEHjJ,EAQCH,EAAAmN,EAAA/M,6vBC3BmI,yCACD,8DAGJ,4BASjG,s7CAvB9BD,EAA8DH,EAAAkJ,EAAA9I,YAC9DD,EAQIH,EAAAqJ,EAAAjJ,GAPNL,EAMIsJ,EAAAC,GALJvJ,EAA4CuJ,EAAA8D,GAC5CrN,EAA0EuJ,EAAA+D,GAC1EtN,EAA0EuJ,EAAAgE,GAC1EvN,EAA0EuJ,EAAAiE,GAC1ExN,EAA0EuJ,EAAAkE,YAG1ErN,EAA4JH,EAAAmJ,EAAA/I,mBAC5JD,EAAuKH,EAAAoJ,EAAAhJ,mBAEvKD,EAEIH,EAAA2K,EAAAvK,GADJL,EAA0I4K,EAAAwC,mBAExIhN,EAQCH,EAAAyN,EAAArN,ssBCZwB,mCAUK,0nBAtB9BD,EAA8DH,EAAAkJ,EAAA9I,YAC9DD,EAEIH,EAAAsJ,EAAAlJ,GADFL,EAA6EuJ,EAAAyB,YAE/E5K,EAUIH,EAAAqJ,EAAAjJ,GATFL,EAQCsJ,EAAAF,mBAEHhJ,EAQCH,EAAAoJ,EAAAhJ,6qBCtB2H,8BACH,kEACA,wEAAsL,yDACtL,wEAAsL,82CARhS9B,EAAI,YAArB6B,EAUMH,EAAAiJ,EAAA7I,GATNL,EAAiEkJ,EAAAwB,GACjE1K,EAOIkJ,EAAAqD,GANJvM,EAAoEuM,EAAA5B,GAClE3K,EAAkEuM,EAAA1B,GACpE7K,EAA+IuM,EAAAnD,UAC/IpJ,EAAgLuM,EAAAlD,UAChLrJ,EAAsLuM,EAAAa,UAAApN,EAAuKuM,EAAAmB,UAC7V1N,EAAsLuM,EAAAoB,UAAA3N,EAAgLuM,EAAAqB,oCARrVrP,EAAI,+CAPf,IAAA2M,GAAO,SAGTwB,YAAiB,IAAAzC,EAAA,EAAAiB,GAAO,IAAM,mSCiBxB3M,EAAK,uEACLA,EAAK,qXAPb6B,EAAiEH,EAAA+K,EAAA3K,YACjED,EAQgBH,EAAA2M,EAAAvM,GAPdL,EAMM4M,EAAAC,GAFJ7M,EAAc6M,EAAAgB,UACd7N,EAAc6M,EAAAiB,2BADVvP,EAAK,aACLA,EAAK,qIAVH,2TATC8M,EAAK0C,MAAEA,EAAKC,MAAEA,GAAKlF,uOCHzB,MAAMmF,GAAW,CAEtB,yCACA,mCACA,6BACA,qCACA,uBAGA,8BACA,iDACA,wDAGA,iDAGA,2DAGA,wEAGA,oDACA,+DACA,+DACA,uEACA,gFAGA,0DAGA,iDAGA,0DAGWC,GAAS,CACpB,CACEpN,KAAM,kHACNgM,OAAQ,aACRqB,KAAM,eACNC,GAAI,aAEN,CACEtN,KAAM,qBACNgM,OAAQ,YACRqB,KAAM,eACNC,GAAI,aAEN,CACEtN,KAAM,gEACNgM,OAAQ,YACRqB,KAAM,aACNC,GAAI,eAEN,CACEtN,KAAM,qEACNgM,OAAQ,gBACRqB,KAAM,aACNC,GAAI,gBAEN,CACEtN,KAAM,KACNgM,OAAQ,gBACRqB,KAAM,aACNC,GAAI,QAEN,CACEtN,KAAM,0HACNgM,OAAQ,aACRqB,KAAM,aACNC,GAAI,iBAEN,CACEtN,KAAM,4EACNgM,OAAQ,YACRqB,KAAM,aACNC,GAAI,aAEN,CAEED,KAAM,aACNC,GAAI,gBAEN,CAEED,KAAM,cACNC,GAAI,UAEN,CAEED,KAAM,WACNC,GAAI,YAEN,CAEED,KAAM,YACNC,GAAI,aAEN,CACED,KAAM,OACN9C,MAAO,SACP+C,GAAI,SACJL,MACE,2HACFC,MAAO,+CAET,CACEG,KAAM,OACN9C,MAAO,QACP+C,GAAI,QACJL,MACE,oHACFC,MAAO,8HCnFe,cAAjBzP,EAAO,GAAC4P,KAAoB,EAEN,iBAAjB5P,EAAO,GAAC4P,KAAuB,EAId,SAAjB5P,EAAO,GAAC4P,KAAe,EAEN,aAAjB5P,EAAO,GAAC4P,KAAmB,EAEV,eAAjB5P,EAAO,GAAC4P,KAAqB,EAIZ,eAAjB5P,EAAO,GAAC4P,KAAqB,EAEZ,gBAAjB5P,EAAO,GAAC4P,KAAsB,sYACrB5P,EAAI,4LAFAA,EAAI,mLAJUuO,OAAAvO,KAAQuO,8DAAtBvO,EAAI,mEAAU,EAAAM,IAAAwP,EAAAvB,OAAAvO,KAAQuO,4LAFxBvO,EAAI,oKAFEA,EAAO,6FAAjBA,EAAI,oEd4+CzB,SAA2B+P,EAAQC,GAC/B,MAAM5J,EAAS,GACT6J,EAAc,GACdC,EAAgB,CAAEjQ,QAAS,GACjC,IAAIa,EAAIiP,EAAOlP,OACf,KAAOC,KAAK,CACR,MAAM0G,EAAIuI,EAAOjP,GACXqP,EAAIH,EAAQlP,GAClB,GAAIqP,EAAG,CACH,IAAK,MAAMzM,KAAO8D,EACR9D,KAAOyM,IACTF,EAAYvM,GAAO,GAE3B,IAAK,MAAMA,KAAOyM,EACTD,EAAcxM,KACf0C,EAAO1C,GAAOyM,EAAEzM,GAChBwM,EAAcxM,GAAO,GAG7BqM,EAAOjP,GAAKqP,OAGZ,IAAK,MAAMzM,KAAO8D,EACd0I,EAAcxM,GAAO,EAIjC,IAAK,MAAMA,KAAOuM,EACRvM,KAAO0C,IACTA,EAAO1C,QAAOlD,GAEtB,OAAO4F,OAEgBgK,Ec7gDIpQ,EAAO,Gd8gDH,iBAAjBoQ,GAA8C,OAAjBA,EAAwBA,EAAe,SADtF,IAA2BA,2IcjhDgB7B,OAAAvO,KAAQuO,8DAAtBvO,EAAI,mEAAU,EAAAM,IAAA+P,EAAA9B,OAAAvO,KAAQuO,4LAFzBvO,EAAI,mJAWpB,MAAAsQ,EAAAtQ,KAAQuC,KAAI,8CAAZ,EAAAjC,GAAAgQ,KAAAA,EAAAtQ,KAAQuC,KAAI,KAAAgB,EAAAgN,EAAAD,kCARZ,MAAAA,EAAAtQ,KAAQuC,KAAI,8CAAZ,EAAAjC,GAAAgQ,KAAAA,EAAAtQ,KAAQuC,KAAI,KAAAgB,EAAAgN,EAAAD,0CALfE,EAAW,MAAXxQ,MAAegM,GAAAhM,wCADtB6B,EAsBIH,EAAAsM,EAAAlM,iCArBc,MAAX9B,uLAtBD,IAAAyQ,MAAad,IAEbe,EAAU,WAERC,EAAO,QACW,IAAlBhB,GAAO9O,cAGL,MAAA+P,EAAOH,EAAO9P,KAAKkQ,MAAMlQ,KAAKsM,SAAWwD,EAAO5P,SACtD6K,EAAA,EAAAgF,EAAUE,GACVH,EAASA,EAAOvI,QAAQiI,GAAMA,EAAEN,KAAOe,EAAKf,MAGxCiB,EAAI,KACRpF,EAAA,EAAAgF,EAAU,MACVvC,WAAWwC,EAASI,cAGtBD,4HCGiB9Q,EAAK,8LAPxB6B,EAQCH,EAAAkK,EAAA9J,6BADkB9B,EAAK,kEA3Bb,SAAAgR,GAAeC,MAClBA,EAAU,EAAC,MAAS,OAClB,MACAC,EAAOD,EAAU,GACb,MAAA,GAFMtQ,KAAKkQ,MAAMI,EAAU,OAEhBC,EAAO,GAAS,IAAAA,IAASA,2BAK5C3F,YAZO0C,EAAQrB,EAAEA,EAACC,EAAEA,GAACtC,EACrB4G,EAAS9F,KAAK2B,MAAmB,IAAXiB,EAStBmD,GAAaD,EAAS9F,KAAK2B,OAAS,IACpCxL,EAAQwP,GAAeI,kIAIzB3F,cAAcF,GACdG,EAAA,EAAAH,EAAWI,sBACTyF,EAAYzQ,KAAK0Q,OAAOF,EAAS9F,KAAK2B,OAAS,UAC/CxL,EAAQwP,GAAeI,MACtB,kzBCZ4BpR,EAAQ,gFAH3C6B,EAwBMH,EAAAiJ,EAAA7I,GAfJL,EAGOkJ,EAAAuB,GAFLzK,EAA4DyK,EAAAC,GAC5D1K,EAA0EyK,EAAAE,GAE5E3K,EAUIkJ,EAAAqD,GATFvM,EAA8DuM,EAAA1B,GAC9D7K,EAOEuM,EAAAxB,wFAnB6BxM,EAAQ,8KAP9BiO,GAAQ1D,GACRqC,EAAAA,EAACC,EAAEA,EAAChB,MAAEA,EAAKC,OAAEA,GAAMvB,4ZCIvBvK,EAAK,IAAA,gJAFd6B,EAUOH,EAAAkK,EAAA9J,0JARE9B,EAAK,IAAA,iKALDsR,MAAAA,EAAQ,UAAQ/G,mOCgCkBvK,EAAc,sCAAdA,EAAc,6IAAxBA,EAAO,8OA7BpCuR,EAAK,CACTC,MAAO,SACPC,OAAQ,OACRC,KAAM,SAGJ,IAAAC,EAAiB,GACjBL,EAAQ,aAENM,EAAY,WACV3E,EAAStM,KAAKkQ,MAAMlQ,KAAKsM,SAAWyC,GAAS7O,YACnD8Q,EAAiBjC,GAASzC,IAC1BvB,EAAA,EAAA4F,EAAQ,iBAaRnD,YAAU,IAAOyD,KAAgB,UAVtB,KAEXlG,EAAA,EAAA4F,EADaC,EAAMD,IAGN,QAATA,GACFnD,WAAWyD,EAAc,yMCe1B,mMAPD/P,EASOH,EAAAkK,EAAA9J,qKAbW,kNARlBD,EASCH,EAAAkK,EAAA9J,qHAVE9B,EAAa,GAAA,iVAkClB6B,EAEMH,EAAAiJ,EAAA7I,qsBA9CF+P,GAAgB,WAFLC,IA2CW,IAAApG,EAAA,EAAAmG,GAAgB,kJC1CtC7R,EAAI,eAFKA,EAAI,qPADnB6B,EAKMH,EAAAiJ,EAAA7I,GAJJL,EAAyDkJ,EAAA8B,GACzDhL,EAECkJ,EAAAiB,oCAHY5L,EAAI,aAEbA,EAAI,qFAPG,IAAA+R,KAAAA,EAAIxP,KAAEA,GAAIgI,GACVqC,EAAAA,EAACC,EAAEA,GAACtC,kpBCyDWvK,EAAc,0hBAR/BA,EAAK,IAAAgS,OAILhS,EAAS,IAAAgM,GAAAhM,+QAJTA,EAAK,gGAILA,EAAS,6iBrBqUpB,IAAiBoC,EAAAA,WACNC,SAAS4P,cAAc7P,2IqBxWlCP,EA6COH,EAAAwQ,EAAApQ,GA5CLL,EA2CMyQ,EAAAvH,8LA1DF,IAAAtB,GAAQ,EACR6E,GAAY,SASdC,YAAkB,IAAAzC,EAAA,EAAAwC,GAAY,IAAO,UAPf9L,IACF,eAAhBA,EAAKsC,QACPyJ,YAAkB,IAAAzC,EAAA,EAAArC,GAAQ,IAAO,cCV3B,kEAAQ,CAClB3H,OAAQW,SAAS8P,KACjBvJ,MAAO,CACLxG,KAAM"}